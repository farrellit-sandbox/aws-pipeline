{ 
  "Parameters": {
    "AppSubnets": { "Type": "String", "Description": "(Really a CSV<SubnetId>)" },
    "LoadBalancerSubnets": { "Type": "String", "Description": "(Really a CSV<SubnetId>)" },
    "VpcId": {"Type": "String", "Description": "Really a AWS::EC2::VpcId" },
    "ApplicationName": {"Type": "String" , "Description": "Must be lowercase" },
    "ApplicationGroup": { "Type": "String","Description": "Must be lowercase"  },
    "AppDomainName": { "Type": "String" },
    "AppValidationDomain": { "Type": "String" },
    "Environment": { "Type": "String" },
    "LogRetentionInDays": { "Type": "Number", "Default": "14" },
    "ImageId": { "Type": "String" },
    "GithubOwner": { "Type": "String", "Default": "" },
    "GithubRepo": { "Type": "String", "Default": "" },
    "GithubBranch": { "Type": "String", "Default": "master" },
    "SourceRepository": { "Type": "String", "Description": "Applies when we're not building it ourself", "Default": "" },
    "SourceRepositoryArn": { "Type": "String", "Description": "How could we figure this out", "Default": "" },
    "DockerDir": { "Type": "String", "Default": "." },
    "DockerFile": { "Type": "String", "Default": "Dockerfile" },
    "RepositoryName": { "Type": "String", "Default": "" },
    "DelegationZoneId": { "Type": "String", "Default": "", "Description": "So delegation records can be created" },
    "DelegationZone": { "Type": "String", "Default": "", "Description": "So delegation records can be created" },
    "DockerPort": {"Type": "String", "Default": "80", "Description": "Open this port for the docker container" },
    "KeyName": {"Type": "String", "Default": "" },
    "Bucket": { "Type": "String", "Description": "where to retrieve artifacts from this stack buld, from the top level pipeline" },
    "BucketArn": { "Type": "String", "Description": "arn of bucket" }
  },
  "Conditions": {
    "Debug": { "Fn::Equals": [ "True", "False" ] },
    "UseRepositoryName": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "RepositoryName" }, "" ] } ] },
    "HasSourceRepository": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "SourceRepository" }, "" ] } ] }
  },
  "Resources": {
    "ImageRepo": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
        "RepositoryName": { "Fn::If": [ "UseRepositoryName", { "Ref": "RepositoryName" }, { "Fn::Sub": "${ApplicationGroup}/${ApplicationName}" } ]  }
      }
    },
    "ApplicationBuildPolicy": {
      "Type" : "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "Access the repositories",
        "Path" : "/build/docker/",
        "PolicyDocument" :   {
          "Version":"2012-10-17", 
          "Statement" : [
            {
              "Action": [ "ecr:GetAuthorizationToken" ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [ "ssm:PutParameter" ],
              "Effect": "Allow",
              "Resource": [ { "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/build/github/${GithubOwner}/${GithubRepo}/${GithubBranch}/latest-build" } ]
            },
            {
              "NotAction": [
                "ecr:Delete*",
                "ecr:Put*Policy",
                "ecr:Set*Policy"
              ],
              "Effect": "Allow",
              "Resource": [ { "Fn::Sub": "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ImageRepo}" } ] 
            },
            { "Fn::If": [ "HasSourceRepository", 
             {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer"
              ],
              "Effect": "Allow",
              "Resource":  { "Ref": "SourceRepositoryArn" }
             },
             { "Ref": "AWS::NoValue" }
            ] }
          ]
        }
      }
    },
    "DockerPipeline": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": { 
        "TemplateURL": "file://templates/docker-pipeline.json",
        "Parameters": {
          "GithubOwner": {  "Ref": "GithubOwner" },
          "GithubRepo": { "Ref": "GithubRepo" },
          "GithubBranch": { "Ref": "GithubBranch" },
          "SourceRepository": {"Ref": "SourceRepository" },
          "RepositoryName": { "Ref": "ImageRepo" },
          "ApplicationName": { "Ref": "ApplicationName" },
          "FileLocation": "file://templates//asg.json",
          "AppSubnets": { "Ref": "AppSubnets" },
          "Environment": { "Ref": "Environment" },
          "KeyName": { "Ref": "KeyName" },
          "ImageId": { "Ref": "ImageId" },
          "DockerPort": { "Ref": "DockerPort" },
          "LogGroupName": { "Ref": "LogGroup" },
          "LogGroupArn": { "Fn::GetAtt": [ "LogGroup", "Arn" ] },
          "TargetSecurityGroup": { "Fn::GetAtt": [ "ALB", "Outputs.BackendSecurityGroup" ] },
          "TargetGroupArns": { "Fn::GetAtt": [ "ALB", "Outputs.TargetGroupArn" ] },
          "Bucket": {"Ref": "Bucket" },
          "BucketArn": {"Ref": "BucketArn" }
        }
      }
    },
    "BuildVersionParameter": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": { "Fn::Sub": "/build/github/${GithubOwner}/${GithubRepo}/${GithubBranch}/latest-build" },
        "Description": {"Fn::Sub": [ "Git SHA tag of Latest successful build of ${TargetRepo}:${GithubBranch}", { "TargetRepo": { "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ImageRepo}" }  } ] },
        "Type": "String", 
        "Value": "0x00"
      }
    },
    "LogGroup": {   
      "Properties": {
        "LogGroupName": { "Fn::Sub": "${Environment}-${ApplicationName}" },
        "RetentionInDays": { "Ref": "LogRetentionInDays" }
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "HostedZone": {
      "Type": "AWS::CloudFormation::Stack", 
      "Properties": {
        "TemplateURL": "file://templates/zone.json",
        "Parameters": {
          "DomainName": { "Ref": "AppDomainName" },
          "ApplicationName": { "Ref": "ApplicationName" },
          "ApplicationGroup": { "Ref": "ApplicationGroup" },
          "Environment": { "Ref": "Environment" },
          "DelegationZoneId": { "Ref": "DelegationZoneId"},
          "DelegationZone": { "Ref": "DelegationZone"}
        }
      }
    },
    "ALB": { 
      "Type": "AWS::CloudFormation::Stack", 
      "Properties": {
        "TemplateURL": "file://templates/alb.json",
        "Parameters": {
          "ApplicationName": { "Ref": "ApplicationName" },
          "Environment": { "Ref": "Environment" },
          "Subnets": { "Ref": "LoadBalancerSubnets" },
          "VpcId": { "Ref": "VpcId" },
          "DomainName": { "Ref": "AppDomainName" },
          "ValidationDomain": { "Ref": "AppValidationDomain" },
          "HostedZoneId": { "Fn::GetAtt": [ "HostedZone", "Outputs.HostedZoneId" ] } 
        }
      }
    }
  }
}
